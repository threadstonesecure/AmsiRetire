
package gov.stcroix.journalimport.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ServiceCatalogService", targetNamespace = "http://xmlns.oracle.com/oracle/apps/fnd/applcore/webservices/", wsdlLocation = "file:/C:/Users/LBerwa/AppData/Local/Temp/tempdir7407576515306989511.tmp/ServiceCatalogService_1.wsdl")
public class ServiceCatalogService_Service
    extends Service
{

    private final static URL SERVICECATALOGSERVICE_WSDL_LOCATION;
    private final static WebServiceException SERVICECATALOGSERVICE_EXCEPTION;
    private final static QName SERVICECATALOGSERVICE_QNAME = new QName("http://xmlns.oracle.com/oracle/apps/fnd/applcore/webservices/", "ServiceCatalogService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
        	url = new URL("https://efff-test.fs.us6.oraclecloud.com:443/fndAppCoreServices/ServiceCatalogService?wsdl");
            //url = new URL("file:/C:/Users/LBerwa/AppData/Local/Temp/tempdir7407576515306989511.tmp/ServiceCatalogService_1.wsdl");
        	
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SERVICECATALOGSERVICE_WSDL_LOCATION = url;
        SERVICECATALOGSERVICE_EXCEPTION = e;
    }

    public ServiceCatalogService_Service() {
        super(__getWsdlLocation(), SERVICECATALOGSERVICE_QNAME);
    }

    public ServiceCatalogService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), SERVICECATALOGSERVICE_QNAME, features);
    }

    public ServiceCatalogService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICECATALOGSERVICE_QNAME);
    }

    public ServiceCatalogService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICECATALOGSERVICE_QNAME, features);
    }

    public ServiceCatalogService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceCatalogService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ServiceCatalogService
     */
    @WebEndpoint(name = "ServiceCatalogServiceSoapHttpPort")
    public ServiceCatalogService getServiceCatalogServiceSoapHttpPort() {
        return super.getPort(new QName("http://xmlns.oracle.com/oracle/apps/fnd/applcore/webservices/", "ServiceCatalogServiceSoapHttpPort"), ServiceCatalogService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServiceCatalogService
     */
    @WebEndpoint(name = "ServiceCatalogServiceSoapHttpPort")
    public ServiceCatalogService getServiceCatalogServiceSoapHttpPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://xmlns.oracle.com/oracle/apps/fnd/applcore/webservices/", "ServiceCatalogServiceSoapHttpPort"), ServiceCatalogService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SERVICECATALOGSERVICE_EXCEPTION!= null) {
            throw SERVICECATALOGSERVICE_EXCEPTION;
        }
        return SERVICECATALOGSERVICE_WSDL_LOCATION;
    }

}
